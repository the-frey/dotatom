@import "syntax-variables";
@import "ui-variables";

.icon-mixin() {
  display: inline-block;
  text-align: center;
  font-style: normal;
  font-weight: bold;
  width: 2em;
  color: @text-color-subtle;
  background: fadeout(@text-color, 90%);
  // &:empty { display: none; }
  > *::before {
    position: relative;
    left: 0.2em;
  }

  .make-type-icon(attribute, @syntax-color-attribute);
  .make-type-icon(builtin, @syntax-color-keyword);
  .make-type-icon(class, @syntax-color-class);
  .make-type-icon(constant, @syntax-color-constant);
  .make-type-icon(function, @syntax-color-function);
  .make-type-icon(import, @syntax-color-import);
  .make-type-icon(keyword, @syntax-color-keyword);
  .make-type-icon(method, @syntax-color-method);
  .make-type-icon(module, @syntax-color-import);
  .make-type-icon(mixin, @syntax-color-class);
  .make-type-icon(package, @syntax-color-import);
  .make-type-icon(property, @syntax-color-property);
  .make-type-icon(require, @syntax-color-import);
  .make-type-icon(snippet, @syntax-color-snippet);
  .make-type-icon(tag, @syntax-color-tag);
  .make-type-icon(type, @syntax-color-class);
  .make-type-icon(value, @syntax-color-value);
  .make-type-icon(variable, @syntax-color-variable);
  .make-type-icon(selector, @syntax-color-attribute);
  .make-type-icon(pseudo-selector, @syntax-color-attribute);
}

.fade {
  color: @text-color-subtle;
}

.make-type-icon(@type, @color) {
  &.@{type} {
    color: @color;
    background: fadeout(@color, 80%);
    &::before {
      margin: 0;
    }
  }
}

.make-type-icon(@type, @color)
  when (hsvvalue(@color) - hsvvalue(@overlay-background-color) > -20)
  and (hsvvalue(@color) - hsvvalue(@overlay-background-color) < 20) {
  &.@{type} {
    @corrected-color: contrast(@overlay-background-color, darken(@color, 30%), lighten(@color, 30%));
    color: @corrected-color;
    background: fadeout(@corrected-color, 80%);
    &::before {
      margin: 0;
    }
  }
}
